package com.emar.egou.partner.alipay.services;

import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.dom4j.Document;
import org.dom4j.DocumentException;
import org.dom4j.Node;
import org.dom4j.io.SAXReader;

import com.emar.egou.partner.alipay.config.AlipayConfig;
import com.emar.egou.partner.alipay.util.AlipaySubmit;
import com.emar.framework.util.Config;

/* *
 *类名：AlipayService
 *功能：支付宝各接口构造类
 *详细：构造支付宝各接口请求参数
 *版本：3.2
 *修改日期：2011-03-17
 *说明：
 *以下代码只是为了方便商户测试而提供的样例代码，商户可以根据自己网站的需要，按照技术文档编写,并非一定要使用该代码。
 *该代码仅供学习和研究支付宝接口使用，只是提供一个参考。
 */

public class AlipayService {

	/**
	 * 支付宝提供给商户的服务接入网关URL(旧)
	 */
	// private final static String ALIPAY_GATEWAY_OLD =
	// "https://www.alipay.com/cooperate/gateway.do?";

	/**
	 * 支付宝提供给商户的服务接入网关URL(新)
	 */
	private static final String ALIPAY_GATEWAY_NEW = "https://mapi.alipay.com/gateway.do?";// https://mapi.alipay.net/gateway.do?

	/**
	 * 构造快捷登录接口
	 * 
	 * @param encrypt_key
	 *            防钓鱼时间戳
	 * @param exter_invoke_ip
	 *            买家本地电脑的IP地址
	 * @return 表单提交HTML信息
	 */
	public static String alipayAuthorizeLogin(String antiPhishingKey,
			String exterInvokeIp, String callBackUrl) {
		Map<String, String> sParaTemp = new HashMap<String, String>();

		sParaTemp.put("service", "alipay.auth.authorize");
		sParaTemp.put("target_service", "user.auth.quick.login");
		sParaTemp.put("partner", AlipayConfig.partner);
		sParaTemp.put("return_url", callBackUrl);
		sParaTemp.put("_input_charset", AlipayConfig.input_charset);
		sParaTemp.put("anti_phishing_key", antiPhishingKey);
		sParaTemp.put("exter_invoke_ip", exterInvokeIp);
		return AlipaySubmit.buildGetUrl(sParaTemp, ALIPAY_GATEWAY_NEW,
				new String[] { "anti_phishing_key", "return_url" });
	}

	/**
	 * 构造快捷登录物流地址查询接口
	 * 
	 * @param token
	 *            授权令牌
	 * @return 表单提交HTML信息
	 */
	public static String userAddressQuery(String token, String callBackUrl) {
		Map<String, String> sParaTemp = new HashMap<String, String>();

		sParaTemp.put("service", "user.logistics.address.query");
		sParaTemp.put("partner", AlipayConfig.partner);
		sParaTemp.put("return_url", callBackUrl);
		sParaTemp.put("_input_charset", AlipayConfig.input_charset);
		sParaTemp.put("token", token);
		return AlipaySubmit.buildGetUrl(sParaTemp, ALIPAY_GATEWAY_NEW,
				new String[] { "return_url" });
	}

	/**
	 * 获得支付宝用户的基本信息
	 * 
	 */
	@SuppressWarnings("unchecked")
	public static Map<String, String> getUserByUid(String uid) throws Exception {
		Map<String, String> sParaTemp = new HashMap<String, String>();
		sParaTemp.put("service", "user_query");
		sParaTemp.put("partner", AlipayConfig.partner);
		sParaTemp.put("_input_charset", AlipayConfig.input_charset);
		sParaTemp.put("user_id", uid);
		String url = AlipaySubmit.buildGetUrl(sParaTemp, ALIPAY_GATEWAY_NEW,
				null);
		SAXReader reader = new SAXReader();
		Document doc = reader.read(new URL(url).openStream());
		List<Node> nodeList = doc.selectNodes("//alipay/*");
		for (Node node : nodeList) {
			if ("is_success".equals(node.getName())
					&& "T".equals(node.getText())) {
				List<Node> nodeList1 = doc.selectNodes("//response/user/*");
				Map<String, String> resp = new HashMap<String, String>();
				for (Node node1 : nodeList1) {
					resp.put(node1.getName(), node1.getText());
				}
				return resp;
			}
		}

		return null;
	}

	/**
	 * 用于防钓鱼，调用接口query_timestamp来获取时间戳的处理函数 注意：远程解析XML出错，与服务器是否支持SSL等配置有关
	 * 
	 * @return 时间戳字符串
	 * @throws IOException
	 * @throws DocumentException
	 * @throws MalformedURLException
	 */
	@SuppressWarnings("unchecked")
	public static String queryTimestamp() throws MalformedURLException,
			DocumentException, IOException {

		// 构造访问query_timestamp接口的URL串
		String strUrl = ALIPAY_GATEWAY_NEW + "service=query_timestamp&partner="
				+ AlipayConfig.partner;
		StringBuffer result = new StringBuffer();

		SAXReader reader = new SAXReader();
		Document doc = reader.read(new URL(strUrl).openStream());

		List<Node> nodeList = doc.selectNodes("//alipay/*");

		for (Node node : nodeList) {
			// 截取部分不需要解析的信息
			if (node.getName().equals("is_success")
					&& node.getText().equals("T")) {
				// 判断是否有成功标示
				List<Node> nodeList1 = doc
						.selectNodes("//response/timestamp/*");
				for (Node node1 : nodeList1) {
					result.append(node1.getText());
				}
			}
		}

		return result.toString();
	}

	/**
	 * 获得支付宝账户通的绑定url
	 * 
	 * @param egouUserId
	 *            易购用户ID
	 * @param egouUserName
	 *            易购的用户名
	 * @param isBindFromAlipay
	 *            是否从支付宝方面绑定
	 * @param alipayId
	 *            支付宝的ID
	 * @return
	 */
	public static String getAccountAssetBindUrl(long egouUserId,
			String egouUserName, boolean isBindFromAlipay, String alipayId) {
		Map<String, String> sParaTemp = new HashMap<String, String>();
		sParaTemp.put("service", "alipay.user.account.asset.bind");
		sParaTemp.put("partner", AlipayConfig.partner);
		sParaTemp.put("_input_charset", AlipayConfig.input_charset);
		sParaTemp.put("notify_url", Config.getString("egou.domain.url")
				+ "/alipaybindnotify.do");// 服务器一部通知页面路径
		sParaTemp.put("b_user_id", String.valueOf(egouUserId));
		sParaTemp.put("b_user_name", egouUserName);
		sParaTemp.put("provider_name", "易购网");
		sParaTemp.put("bind_from", isBindFromAlipay ? "alipay" : "provider");
		if (isBindFromAlipay) {
			sParaTemp.put("user_id", alipayId);
		}
		// sParaTemp.put("b_user_grade", "");用户等级，以后可以增加
		return AlipaySubmit.buildGetUrl(sParaTemp, ALIPAY_GATEWAY_NEW,
				new String[] { "notify_url", "b_user_name", "provider_name" });
	}

	/**
	 * 账户通资产推送
	 * 
	 * @param egouUserId
	 *            易购用户ID
	 * @param alipayId
	 *            支付宝ID
	 * @param categoryName
	 *            资产名字 返现 易币
	 * @param amount
	 *            资产数量词 如2元 3个
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public static Map<String, String> accountAssetPush(long egouUserId,
			String alipayId, String categoryName, String amount) {
		Map<String, String> sParaTemp = new HashMap<String, String>();
		sParaTemp.put("service", "alipay.user.account.asset.push");
		sParaTemp.put("partner", AlipayConfig.partner);
		sParaTemp.put("_input_charset", AlipayConfig.input_charset);
		sParaTemp.put("user_id", alipayId);
		sParaTemp.put("b_user_id", String.valueOf(egouUserId));
		sParaTemp.put("category_name", categoryName);
		sParaTemp.put("status", "VALID");
		sParaTemp.put("amount", amount);
		String strUrl = AlipaySubmit.buildGetUrl(sParaTemp, ALIPAY_GATEWAY_NEW,
				new String[] { "category_name","amount" });
		Map<String, String> resp = new HashMap<String, String>();
		resp.put("is_success", "F");
		try {
			URL url = new URL(strUrl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setConnectTimeout(5000);
			conn.setReadTimeout(10000);
			SAXReader reader = new SAXReader();
			Document doc = reader.read(conn.getInputStream());
			List<Node> nodeList = doc.selectNodes("//alipay/*");
			for (Node node : nodeList) {
				resp.put(node.getName(), node.getText());
			}
		} catch (Exception e) {
		}

		return resp;
	}

	/**
	 * 快捷绑定接口
	 * @param egouUserId
	 * @param egouUserName
	 * @param alipayId
	 * @param token
	 * @return
	 */
	@SuppressWarnings("unchecked")
	public static Map<String, String> accountBindPush(long egouUserId,
			String egouUserName, String alipayId, String token) {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
		Map<String, String> sParaTemp = new HashMap<String, String>();
		sParaTemp.put("service", "alipay.user.asset.quick.bind");
		sParaTemp.put("partner", AlipayConfig.partner);
		sParaTemp.put("_input_charset", AlipayConfig.input_charset);
		sParaTemp.put("timestamp",sdf.format(new Date()));
		sParaTemp.put("user_id", alipayId); //支付宝账号ID
		sParaTemp.put("b_user_id", String.valueOf(egouUserId));
		sParaTemp.put("b_user_name", egouUserName);
		sParaTemp.put("token", token);
		String strUrl = AlipaySubmit.buildGetUrl(sParaTemp, ALIPAY_GATEWAY_NEW,
				new String[] { "timestamp","b_user_name" });
		Map<String, String> resp = new HashMap<String, String>();
		resp.put("is_success", "F");
		try {
			URL url = new URL(strUrl);
			HttpURLConnection conn = (HttpURLConnection) url.openConnection();
			conn.setConnectTimeout(5000);
			conn.setReadTimeout(10000);
			SAXReader reader = new SAXReader();
			Document doc = reader.read(conn.getInputStream());
			List<Node> nodeList = doc.selectNodes("//alipay/*");
			for (Node node : nodeList) {
				resp.put(node.getName(), node.getText());
			}
		} catch (Exception e) {
		}

		return resp;
	}

	
	public static void main(String[] args) throws Exception {
		System.out.println(getUserByUid("2088302271148330"));
	}

}
